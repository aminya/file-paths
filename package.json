{
  "name": "patha",
  "version": "0.3.0",
  "description": "File paths library. All you need to work with paths. Tiny drop-in replacement for 'path'. Works in Node, Browser, and Deno.",
  "homepage": "https://github.com/aminya/patha",
  "repository": "https://github.com/aminya/patha",
  "license": "Apache-2.0",
  "author": "Amin Yahyaabadi",
  "exports": {
    "import": "./dist/node/index.mjs",
    "require": "./dist/node/index.js"
  },
  "main": "./dist/node/index.js",
  "module": "./dist/node/index.mjs",
  "main.browser": "./dist/browser/index.js",
  "module.browser": "./dist/browser/index.mjs",
  "main.deno": "./dist/deno/index.js",
  "module.deno": "./dist/deno/index.mjs",
  "source": "./src/index.ts",
  "browser": {
    "path": "./node_modules/path-browserify",
    "process": "./node_modules/process"
  },
  "targets": {
    "main": {
      "context": "node",
      "engines": {
        "node": ">=12.x"
      },
      "optimize": true,
      "includeNodeModules": true,
      "outputFormat": "commonjs",
      "isLibrary": false
    },
    "module": {
      "context": "node",
      "engines": {
        "node": ">=16.x"
      },
      "optimize": true,
      "includeNodeModules": true,
      "outputFormat": "esmodule",
      "isLibrary": false
    },
    "main.browser": {
      "context": "browser",
      "engines": {
        "browsers": "> 0.5%"
      },
      "optimize": true,
      "includeNodeModules": true,
      "outputFormat": "esmodule",
      "isLibrary": true
    },
    "module.browser": {
      "context": "browser",
      "engines": {
        "browsers": "last 2 versions"
      },
      "optimize": true,
      "includeNodeModules": true,
      "outputFormat": "esmodule",
      "isLibrary": true
    }
  },
  "files": [
    "dist/",
    "src/",
    "tsconfig.json",
    "dev/tsc-mjs.mjs",
    "LICENSE_dependencies.txt"
  ],
  "scripts": {
    "build": "run-s clean build.tsc.esm build.parcel",
    "build.parcel": "shx rm -rf dist/node/index.js* && cross-env NODE_ENV=production parcel build --target main --target module --target main.browser --target module.browser && cp -r ./dist/browser/*.mjs* ./dist/deno",
    "build.tsc.cjs": "tsc -p ./tsconfig.cjs.json",
    "build.tsc.esm": "tsc -p ./tsconfig.json && node ./dev/tsc-mjs.mjs",
    "bump": "ncu -u -x execa,numerous && pnpm update",
    "clean": "shx rm -rf dist && shx mkdir ./dist && shx mkdir ./dist/deno",
    "dev": "cross-env NODE_ENV=development parcel watch",
    "docs": "shx rm -rf ./README.md && pnpm exec readme --path ./dev/docs/readme.md -y && pnpm exec ts-readme --header-depth 3 && pnpm run format",
    "format": "run-s lint.prettier",
    "lint": "run-p --aggregate-output --continue-on-error lint.cspell lint.eslint lint.prettier",
    "lint.cspell": "cspell lint --no-progress --show-suggestions",
    "lint.eslint": "eslint **/*.{ts,tsx,js,jsx,cjs,mjs,json,yaml} --no-error-on-unmatched-pattern --cache --cache-location ./.cache/eslint/ --fix",
    "lint.prettier": "prettier --write .",
    "prepare": "run-s build",
    "test": "run-p --continue-on-error test.lint test.unit test.integration",
    "test.integration": "run-s build && node ./test/node-integration.mjs && node ./test/node-integration.js && deno run ./test/deno-integration.ts",
    "test.lint": "run-p --aggregate-output --continue-on-error lint.cspell test.lint.eslint test.lint.prettier",
    "test.lint.eslint": "eslint **/*.{ts,tsx,js,jsx,cjs,mjs,json,yaml} --no-error-on-unmatched-pattern --cache --cache-location ./.cache/eslint/",
    "test.lint.prettier": "prettier . --check",
    "test.unit": "jest --runInBand"
  },
  "prettier": "prettier-config-atomic",
  "dependencies": {
    "escape-string-regexp": "^5.0.0",
    "is-path-inside": "^4.0.0",
    "replace-ext": "^2.0.0"
  },
  "devDependencies": {
    "@types/jest": "^28.1.6",
    "cross-env": "7.0.3",
    "cspell": "^6.5.0",
    "eslint": "^8.21.0",
    "eslint-config-atomic": "^1.18.1",
    "jest": "^28.1.3",
    "npm-check-updates": "^16.0.5",
    "npm-run-all2": "^6.0.1",
    "parcel": "2.6.2",
    "prettier": "2.7.1",
    "prettier-config-atomic": "^3.0.10",
    "readme-md-generator": "^1.0.0",
    "shx": "0.3.4",
    "terser-config-atomic": "^0.1.1",
    "ts-jest": "^28.0.7",
    "ts-readme": "^1.1.3",
    "typescript": "^4.7.4"
  },
  "optionalDependencies": {
    "@types/node": "^18.6.3",
    "@types/replace-ext": "^2.0.0",
    "path-browserify": "^1.0.1",
    "process": "^0.11.10"
  },
  "keywords": [
    "file-path",
    "path",
    "file",
    "prefix",
    "extension",
    "fs",
    "file system",
    "node-path",
    "path-extra",
    "paths",
    "path-plus"
  ],
  "pnpm": {
    "overrides": {
      "eslint": "^8.21.0",
      "prettier": "2.7.1",
      "lru-cache": "7.8.1",
      "core-js": "*",
      "babel-eslint": "npm:@babel/eslint-parser"
    },
    "peerDependencyRules": {
      "allowedVersions": {
        "eslint": "*"
      }
    }
  }
}